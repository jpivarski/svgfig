#summary Introduction to SVGFig
#labels Featured,Tutorial

SVGFig is a [http://www.python.org Python] extension module that defines two new classes, [ClassSVG SVG] (_svig_) and [ClassFig Fig] (_fig_).

[ClassSVG SVG] represents an image in [http://www.svg.org/ Scalable Vector Graphics] format, a markup language similar to HTML.  By making Scalable Vector Graphics commands accessible to the Python language, the [ClassSVG SVG] class broadens the user's capabilities in much the same way that dynamically-generated HTML did for webpages.  You can write programs that create images.

[ClassFig Fig] builds a mathematical figure by applying a coordinate transformation to graphics primatives.  Unlike the the strictly linear transformations in the Scalable Vector Graphics command-set, [ClassFig Fig] transformations can be any Python function.  Moreover, one often wants to transform only the mathematically-meaningful coordinates and not the widths of lines, lengths of tick marks, or radii of circular points, so [ClassFig Fig] allows you to make such a distinction.  [ClassFig Fig] transformations are composed by nesting, so you can make self-similar images by recursion.

== SVG ==

The [ClassSVG SVG] class is a document object model of the Scalable Vector Graphics image, meaning that the tree of objects normally represented in XML is represented instead with linked Python objects.

In XML-SVG, a rectangle can be represented by
{{{
<rect x="10" y="10" width="80" height="80" />
}}}
To do the same in Python, load the [ClassSVG SVG] class from SVGFig and assign `s` to a new instance.  (See [HowToInstall "How to Install"] if the `import` command doesn't work.)
{{{
>>> from svgfig import SVG
>>> s = SVG("rect", x=10, y=10, width=80, height=80)
>>> print s.xml()
<rect y=10 width=80 height=80 x=10 />
}}}









== Fig ==