#summary Draw an arbitrarily-oriented ellipse with a given semimajor axis and semiminor length
#labels Reference

= class Ellipse =

Ellipse draws ellipses and circles.  The shape may be non-elliptical
if passed through a non-linear coordinate transformation.

== Arguments ==

*Ellipse(x, y, ax, ay, b, attribute=value)*

|| x, y || _*required*_ || the center of the ellipse/circle ||
|| ax, ay || _*required*_ || a vector indicating the length and direction of the semimajor axis ||
|| b || _*required*_ || the length of the semiminor axis.  If equal to sqrt(ax^2^ + ay^2^), the ellipse is a circle ||
|| attribute=value pairs || _keyword list_ || SVG attributes ||

(If sqrt(ax^2^ + ay^2^) is less than b, then (ax,ay) is actually the semiminor axis.)

== SVG method ==

Ellipse has an *SVG* method, as described in [GeneralPrimative General features for all primatives].

== Path method ==

Ellipse has a *Path* method, as described in [GeneralPrimative General features for all primatives].

== Defaults ==

Ellipse has the same defaults as [ClassCurve Curve].  Defaults are described in [GeneralPrimative General features for all primatives].

|| random_sampling || True || if False, bisect with a point exactly halfway between pairs of points; if True, randomly choose a point between 30% and 70% ||
|| recursion_limit || 15 || number of subdivisions before giving up; if 15, sampling algorithm can visit _at most_ 2^15^ points ||
|| linearity_limit || 0.05 || maximum deviation (in SVG units) from a straight line ||
|| discontinuity_limit || 5 || minimum deviation (in SVG units) between points that is considered continuous ||
